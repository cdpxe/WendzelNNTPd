name: Build tests

on:
    workflow_dispatch:
    push:
        branches:

jobs:
# Plan:
# config bereitstellen, tls-cert erstellen, tls-client cert bereitstellen
# testmatrix fÃ¼r die verschiedenen Plattformen erstellen
  build-test:
    runs-on: ubuntu-latest
    name: Build and Test wendzelnntpd
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/ppc64le
      - name: Install test tools
        run: sudo apt-get update -y && sudo apt-get install -y netcat-openbsd expect
      - run: docker network create --ipv6 ip6net
      - name: Start Docker container
        run: |
          docker run \
            --network ip6net \
            --rm \
            -v $(pwd):${{ github.workspace }} \
            -w ${{ github.workspace }} \
            --name testcontainer \
            -d -it \
            debian:stable-slim \
            /bin/sh
      - name: Install dependencies
        run: docker exec testcontainer bash -c "apt-get update -y && apt-get install -y gcc flex bison sqlite3 libsqlite3-dev mariadb-client libmariadb-dev-compat ca-certificates libmariadb-dev libmhash-dev make openssl libssl-dev"
      - name: configure
        run: docker exec testcontainer bash -c "./configure"
      - name: make
        run: docker exec testcontainer bash -c "make"
      - name: make install
        run: docker exec testcontainer bash -c "make install"
      - name: Initialize test data
        run: docker exec testcontainer bash -c "cd unittesting/tls-testing && ./initialize_db.sh"
      - name: run wendzelnntpd
        run: docker exec testcontainer bash -c "wendzelnntpd -d"
      - name: get container ipv4
        run: echo "ipv4=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' testcontainer)" >> $GITHUB_ENV
      - name: get container ipv6
        run: echo "ipv6=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.GlobalIPv6Address}}{{end}}' testcontainer)" >> $GITHUB_ENV
      - name: Smoketest IPv4
        run: netcat ${{ env.ipv4 }} 119 -w 1
      - name: Smoketest IPv6
        run: netcat ${{ env.ipv6 }} 119 -w 1
      - name: expect tests IPv4
        run: cd unittesting/tls-testing && nntp_address=${{ env.ipv4 }} ./run.sh
      - name: expect tests IPv6
        run: cd unittesting/tls-testing && nntp_address=${{ env.ipv6 }} ./run.sh
      - name: Stop Docker container
        run: docker stop testcontainer -t 1
